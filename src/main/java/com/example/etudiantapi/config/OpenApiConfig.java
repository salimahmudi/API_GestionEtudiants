package com.example.etudiantapi.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.tags.Tag;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class OpenApiConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(new Info()
                        .title("API de Gestion des √âtudiants / Student Management API")
                        .version("2.0")
                        .description("API REST pour la gestion des √©tudiants avec support multilingue et versioning.\n" +
                                   "REST API for student management with multilingual support and versioning.\n\n" +
                                   "üìå **Versions disponibles / Available versions:**\n" +
                                   "- V1 (‚ö†Ô∏è Deprecated): `/api/v1/etudiants`\n" +
                                   "- V2 (Current): `/api/v2/etudiants`\n\n" +
                                   "üåê **Langues support√©es / Supported languages:**\n" +
                                   "- Fran√ßais (fr)\n" +
                                   "- English (en)\n\n" +
                                   "üí° **Utilisation / Usage:**\n" +
                                   "Ajoutez le param√®tre `?lang=fr` ou `?lang=en` √† vos requ√™tes pour obtenir les messages dans la langue souhait√©e.\n" +
                                   "Add the parameter `?lang=fr` or `?lang=en` to your requests to get messages in the desired language.")
                        .contact(new Contact()
                                .name("Support API / API Support")
                                .email("support@etudiantapi.com")
                                .url("https://github.com/example/etudiant-api"))
                        .license(new License()
                                .name("MIT License")
                                .url("https://opensource.org/licenses/MIT")))
                .servers(List.of(
                        new Server().url("http://localhost:8080").description("Serveur de d√©veloppement / Development Server"),
                        new Server().url("https://api.example.com").description("Serveur de production / Production Server")
                ))
                .tags(List.of(
                        new Tag().name("√âtudiants V1 (Deprecated)")
                                .description("‚ö†Ô∏è Version 1 d√©pr√©ci√©e - Utilisez la version 2 (/api/v2/etudiants)\n" +
                                           "‚ö†Ô∏è Version 1 deprecated - Use version 2 (/api/v2/etudiants)"),
                        new Tag().name("√âtudiants V2")
                                .description("Gestion des √©tudiants - Version 2 avec support multilingue am√©lior√©\n" +
                                           "Student management - Version 2 with enhanced multilingual support"),
                        new Tag().name("Home")
                                .description("Endpoints g√©n√©raux / General endpoints"),
                        new Tag().name("Database")
                                .description("Gestion de la base de donn√©es / Database management")
                ));
    }
}
